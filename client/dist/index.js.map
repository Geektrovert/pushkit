{"version":3,"sources":["index.js"],"names":["_log","msg","console","log","toUint8Array","base64String","padding","base64","repeat","length","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","getSubStatus","reg","Promise","resolve","reject","pushManager","getSubscription","then","sub","catch","e","requestPushSubscription","key","applicationServerKey","subscribe","userVisibleOnly","PushKit","publicKey","verbose","Error","supported","subscribed","granted","Notification","permission","navigator","_initRegistrationInternal","swRegistration","handleRegistration","info","_handle","error","requestPermission","err"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["/// <reference types=\"./index\" />\nconst _log = (msg) => console.log(msg);\nfunction toUint8Array(base64String) {\n\tconst padding     = '='.repeat((4 - base64String.length % 4) % 4);\n\tconst base64      = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\n\tconst rawData     = window.atob(base64);\n\tconst outputArray = new Uint8Array(rawData.length);\n\tfor (let i = 0; i < rawData.length; ++i) {\n\t  outputArray[i] = rawData.charCodeAt(i);\n\t}\n\treturn outputArray;\n}\nfunction getSubStatus(reg){\n\treturn new Promise((resolve,reject)=>{\n\t\ttry{\n\t\treg.pushManager.getSubscription()\n\t\t\t.then(sub=>{\n\t\t\t\tif(sub === null) return reject(null);\n\t\t\t\telse return resolve(sub);\n\t\t\t})\n\t\t\t.catch(reject);\t\n\t\t}\n\t\tcatch(e){\n\t\t\treject(null);\n\t\t}\n\t})\n}\nfunction requestPushSubscription(reg,key){ \n\treturn new Promise((resolve,reject)=>{\n\t\tlet applicationServerKey = toUint8Array(key);\n\t\ttry{\n\t\t\treg.pushManager.subscribe({\n\t\t\t\tuserVisibleOnly: true,\n\t\t\t\tapplicationServerKey\n\t\t\t}).then(resolve).catch(reject);\n\t\t}\n\t\tcatch(e){\n\t\t\treject(e);\n\t\t}\n\t})\n}\n/**\n * @type {import('./index')}\n */\nfunction PushKit(publicKey, verbose = false){\n\tif(!publicKey || typeof publicKey !== \"string\") throw new Error(\"Public key must be a valid VAPT key\");\n\tthis.supported  = true;\n\tthis.subscribed = false;\n\tthis.key        = publicKey;\n\tthis.reg        = null;\n\tthis.sub        = null;\n\tthis.granted    = false;\n\tif(window.Notification && \"permission\" in window.Notification) this.granted = (window.Notification.permission === \"granted\");\n\tif (!('serviceWorker' in navigator) || !('PushManager' in window)) this.supported = false;\t\n\tthis._initRegistrationInternal = (swRegistration) =>{\n\t\tif(!swRegistration) throw new Error(\"Service worker registration object required as argument\");\n\t\treturn new Promise(resolve=>{\n\t\t\tif(this.supported === false) return resolve(null);\n\t\t\tthis.reg = swRegistration;\n\t\t\tgetSubStatus(this.reg).then(sub=>{\n\t\t\t\tthis.sub        = sub;\n\t\t\t\tthis.subscribed = true;\n\t\t\t\tthis.granted    = true;\n\t\t\t\tif(verbose) _log(\"Already Push Subscribed\");\n\t\t\t\treturn resolve(this.sub);\n\t\t\t}).catch(e=>{\n\t\t\t\tif(verbose) _log(e);\n\t\t\t\trequestPushSubscription(this.reg,this.key).then(sub=>{\n\t\t\t\t\tthis.sub        = sub;\n\t\t\t\t\tthis.subscribed = true;\n\t\t\t\t\tthis.granted    = true;\n\t\t\t\t\tif(verbose) _log(\"Freshly Push Subscribed\");\n\t\t\t\t\treturn resolve(this.sub);\n\t\t\t\t}).catch(e=>{\n\t\t\t\t\tif(verbose) _log(e);\n\t\t\t\t\treturn resolve(null);\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t}\n\tthis.handleRegistration = (swRegistration, verbose = false)=>{\n\t\treturn new Promise(resolve=>{\n\t\t\tif(window.Notification && \"requestPermission\" in window.Notification){\n\t\t\t\tverbose && console.info(\"Using window.Notification API\");\n\t\t\t\tif(window.Notification.permission === \"granted\") return this._initRegistrationInternal(swRegistration, verbose).then(resolve);\n\t\t\t\tconst _handle = permission => {\n\t\t\t\t\tif(permission === \"granted\") return this._initRegistrationInternal(swRegistration, verbose).then(resolve);\n\t\t\t\t\telse{\n\t\t\t\t\t\tverbose && console.error(\"Notification permission denied\");\n\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst _catch = err => {\n\t\t\t\t\tverbose && console.error(\"Failed to request notification permission\", err);\n\t\t\t\t\treturn reject(null);\n\t\t\t\t}\n\t\t\t\ttry{\n\t\t\t\t\twindow.Notification.requestPermission().then(_handle).catch(_catch);\n\t\t\t\t}\n\t\t\t\tcatch(e){\n\t\t\t\t\treturn window.Notification.requestPermission(_handle);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn this._initRegistrationInternal(swRegistration, verbose).then(resolve);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport {PushKit}"]}